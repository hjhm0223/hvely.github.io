{"componentChunkName":"component---src-templates-single-post-js","path":"/posts/jpa-1-query/","result":{"data":{"post":{"frontmatter":{"meta":{"title":"test meta title","description":"test meta description","noindex":null,"canonicalLink":null},"title":"JPA (1) - Query","template":"SinglePost","subtitle":null,"date":"April 1st, 2020","categories":[{"category":"Spring"}]},"html":"<p><img src=\"https://cdn.inflearn.com/public/courses/324109/course_cover/161476f8-f0b7-4b04-b293-ce648c2ea445/kyh_jsp.png\" alt=\"jpa\"></p>\n<h2>JPA Query</h2>\n<h3>JPA에서 지원하는 쿼리</h3>\n<h4>JPQL(Java Persistence Query Language)</h4>\n<p>엔티티 객체를 대상으로 하는 객체지향 쿼리 언어이다. </p>\n<ul>\n<li>JPQL을 사용하면 JPA는 이 JPQL을 분석한 다음 적절한 SQL을 만들어 데이터베이스를 조회한다. 그리고 조회한 결과로 엔티티 객체를 생성해서 반환한다.</li>\n<li>\n<p>특징</p>\n<ul>\n<li>테이블이 아닌 객체를 대상으로 검색하는 객체지향 쿼리이다.</li>\n<li>SQL을 추상화해서 특정 데이터베이스 SQL에 의존하지 않는다.</li>\n</ul>\n</li>\n</ul>\n<h4>Criteria Query</h4>\n<p>JPQL을 편하게 작성하도록 도와주는 API, 빌더 클래스 모음. JPA 2.0에 추가되었다.</p>\n<ul>\n<li>\n<p>장점</p>\n<ul>\n<li>문자가 아닌 프로그래밍 코드로 JPQL을 작성할 수 있어 컴파일 시점에 오류를 발견할 수 있다.</li>\n<li>IDE를 사용하면 코드 자동완성을 지원한다.</li>\n<li>동적 쿼리를 작성하기 편하다.</li>\n<li>변환되는 JPQL을 캐싱하여 성능을 향상시킬 수 있다. <a href=\"https://kohen.tistory.com/4\">https://kohen.tistory.com/4</a></li>\n</ul>\n</li>\n</ul>\n<h4>Native SQL</h4>\n<p>JPA에서 JPQL 대신 직접 SQL을 사용할 수 있다.</p>\n<ul>\n<li>특정 데이터베이스에 의존하는 기능을 사용할 때 장점을 가지지만, 데이터베이스를 변경하면 Native SQL도 수정해야 한다.</li>\n</ul>\n<h4>QueryDSL</h4>\n<p>Criteria Query처럼 JPQL을 편하게 작성하도록 도와주는 빌더 클래스 모음, 비표준 오픈소스 프레임워크다. (JPA 표준은 아니고 오픈소스 프로젝트이다.)</p>\n<ul>\n<li>\n<p>장점</p>\n<ul>\n<li>코드 기반이며 단순하고 사용하기 쉽다.</li>\n<li>작성한 코드도 JPQL과 비슷해서 한눈에 파악할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h3>JPA Query Parameters</h3>\n<h4>Statement / Prepared Statement 클래스</h4>\n<p>SQL을 실행할 수 있는 클래스로, 큰 차이는 캐시 사용여부이다.</p>\n<h5>Statement 클래스</h5>\n<ul>\n<li>단일로 사용될 때 속도가 빠르다.</li>\n<li>쿼리에 인자를 부여할 수 없다.</li>\n<li>매번 컴파일을 수행해야 한다.</li>\n</ul>\n<h5>PreparedStatement 클래스</h5>\n<ul>\n<li>쿼리에 인자를 부여할 수 있다.</li>\n<li>처음 프리 컴파일된 후, 이후에는 컴파일을 수행하지 않는다.</li>\n<li>여러번 수행될 때 속도가 빠르다.</li>\n<li>\n<p>동작 방식</p>\n<ul>\n<li>애플리케이션은 특정값은 지정하지 않은 채로 틀을 만들고 DBMS로 보낸다.</li>\n<li>DBMS는 틀을 컴파일(최적화 및 변환)하며 실행하지 않고 결과만 저장한다.</li>\n<li>변수에 값을 지정하면 실행하고, 여러 값으로 원하는 횟수만큼 실행할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h4>JPA Query Parameters</h4>\n<ul>\n<li>JDBC prepared statement 파라미터와 비슷하게 JPA도 파라미터화한 쿼리를 사용할 수 있다.</li>\n</ul>\n<h5>Positional parameters</h5>\n<ul>\n<li>위치 매개변수를 사용하면 매개 변수를 내장하고 있을 때 JPQL Injection 공격 위험을 피할 수 있다.</li>\n</ul>\n<pre><code class=\"language-java\">TypedQuery&#x3C;Employee> query = em.createQuery(\n  \"SELECT e FROM Employee e WHERE e.empNumber = ?1\", Employee.class);\nString empNumber = \"A123\";\nEmployee employee = query.setParameter(1, empNumber).getSingleResult();\n\n// collection-valued\nTypedQuery&#x3C;Employee> query = entityManager.createQuery(\n  \"SELECT e FROM Employee e WHERE e.empNumber IN (?1)\" , Employee.class);\nList&#x3C;String> empNumbers = Arrays.asList(\"A123\", \"A124\");\nList&#x3C;Employee> employees = query.setParameter(1, empNumbers).getResultList();\n</code></pre>\n<h5>Named parameters</h5>\n<ul>\n<li>위치 매개변수와 비슷하지만 명명된 매개변수를 사용하면 보다 명확하게 쿼리를 읽을 수 있다.</li>\n</ul>\n<pre><code class=\"language-java\">TypedQuery&#x3C;Employee> query = em.createQuery(\n  \"SELECT e FROM Employee e WHERE e.empNumber = :number\" , Employee.class);\nString empNumber = \"A123\";\nEmployee employee = query.setParameter(\"number\", empNumber).getSingleResult();\n\n// collection-valued\nTypedQuery&#x3C;Employee> query = entityManager.createQuery(\n  \"SELECT e FROM Employee e WHERE e.empNumber IN (:numbers)\" , Employee.class);\nList&#x3C;String> empNumbers = Arrays.asList(\"A123\", \"A124\");\nList&#x3C;Employee> employees = query.setParameter(\"numbers\", empNumbers).getResultList();\n</code></pre>\n<ul>\n<li>JPA 규격은 Native Query에 의해 지원되는 Named parameter를 지원하지는 않는다.</li>\n<li>Hibernate와 같은 일부 구현체가 Named parameter를 지원하더라도 쿼리의 휴대성이 떨어진다.</li>\n</ul>\n<h4>Criteria Query Parameters</h4>\n<ul>\n<li>\n<p>JPA query는 JPA Criteria API를 사용해서 작성할 수 있다. </p>\n<p>(Hibernate 공식 Docs <a href=\"https://docs.jboss.org/hibernate/orm/5.2/topical/html_single/metamodelgen/MetamodelGenerator.html\">https://docs.jboss.org/hibernate/orm/5.2/topical/html_single/metamodelgen/MetamodelGenerator.html</a>)</p>\n</li>\n<li>이름이나 Index 대신 객체를 사용해서 매개변수를 나타낸다.</li>\n</ul>\n<pre><code class=\"language-java\">CriteriaBuilder cb = em.getCriteriaBuilder();\n \nCriteriaQuery&#x3C;Employee> cQuery = cb.createQuery(Employee.class);\nRoot&#x3C;Employee> c = cQuery.from(Employee.class);\nParameterExpression&#x3C;String> paramEmpNumber = cb.parameter(String.class);\ncQuery.select(c).where(cb.equal(c.get(Employee_.empNumber), paramEmpNumber));\n \nTypedQuery&#x3C;Employee> query = em.createQuery(cQuery);\nString empNumber = \"A123\";\nquery.setParameter(paramEmpNumber, empNumber);\nEmployee employee = query.getResultList();\n</code></pre>\n<ul>\n<li>Hibernate metamodel generator로 class를 생성하여 정적 JPA metamodel의 일부로서 단단한(?) critera query를 만들 수 있다.</li>\n</ul>\n<h3>Spring Data JPA Query Method</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Keyword</th>\n<th align=\"left\">Sample</th>\n<th align=\"left\">JPQL snippet</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><code>And</code></td>\n<td align=\"left\"><code>findByLastnameAndFirstname</code></td>\n<td align=\"left\"><code>… where x.lastname = ?1 and x.firstname = ?2</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>Or</code></td>\n<td align=\"left\"><code>findByLastnameOrFirstname</code></td>\n<td align=\"left\"><code>… where x.lastname = ?1 or x.firstname = ?2</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>Is</code>, <code>Equals</code></td>\n<td align=\"left\"><code>findByFirstname</code>,<code>findByFirstnameIs</code>,<code>findByFirstnameEquals</code></td>\n<td align=\"left\"><code>… where x.firstname = ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>Between</code></td>\n<td align=\"left\"><code>findByStartDateBetween</code></td>\n<td align=\"left\"><code>… where x.startDate between ?1 and ?2</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>LessThan</code></td>\n<td align=\"left\"><code>findByAgeLessThan</code></td>\n<td align=\"left\"><code>… where x.age &#x3C; ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>LessThanEqual</code></td>\n<td align=\"left\"><code>findByAgeLessThanEqual</code></td>\n<td align=\"left\"><code>… where x.age &#x3C;= ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>GreaterThan</code></td>\n<td align=\"left\"><code>findByAgeGreaterThan</code></td>\n<td align=\"left\"><code>… where x.age > ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>GreaterThanEqual</code></td>\n<td align=\"left\"><code>findByAgeGreaterThanEqual</code></td>\n<td align=\"left\"><code>… where x.age >= ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>After</code></td>\n<td align=\"left\"><code>findByStartDateAfter</code></td>\n<td align=\"left\"><code>… where x.startDate > ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>Before</code></td>\n<td align=\"left\"><code>findByStartDateBefore</code></td>\n<td align=\"left\"><code>… where x.startDate &#x3C; ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>IsNull</code>, <code>Null</code></td>\n<td align=\"left\"><code>findByAge(Is)Null</code></td>\n<td align=\"left\"><code>… where x.age is null</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>IsNotNull</code>, <code>NotNull</code></td>\n<td align=\"left\"><code>findByAge(Is)NotNull</code></td>\n<td align=\"left\"><code>… where x.age not null</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>Like</code></td>\n<td align=\"left\"><code>findByFirstnameLike</code></td>\n<td align=\"left\"><code>… where x.firstname like ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>NotLike</code></td>\n<td align=\"left\"><code>findByFirstnameNotLike</code></td>\n<td align=\"left\"><code>… where x.firstname not like ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>StartingWith</code></td>\n<td align=\"left\"><code>findByFirstnameStartingWith</code></td>\n<td align=\"left\"><code>… where x.firstname like ?1</code> (parameter bound with appended <code>%</code>)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>EndingWith</code></td>\n<td align=\"left\"><code>findByFirstnameEndingWith</code></td>\n<td align=\"left\"><code>… where x.firstname like ?1</code> (parameter bound with prepended <code>%</code>)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>Containing</code></td>\n<td align=\"left\"><code>findByFirstnameContaining</code></td>\n<td align=\"left\"><code>… where x.firstname like ?1</code> (parameter bound wrapped in <code>%</code>)</td>\n</tr>\n<tr>\n<td align=\"left\"><code>OrderBy</code></td>\n<td align=\"left\"><code>findByAgeOrderByLastnameDesc</code></td>\n<td align=\"left\"><code>… where x.age = ?1 order by x.lastname desc</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>Not</code></td>\n<td align=\"left\"><code>findByLastnameNot</code></td>\n<td align=\"left\"><code>… where x.lastname &#x3C;> ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>In</code></td>\n<td align=\"left\"><code>findByAgeIn(Collection&#x3C;Age> ages)</code></td>\n<td align=\"left\"><code>… where x.age in ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>NotIn</code></td>\n<td align=\"left\"><code>findByAgeNotIn(Collection&#x3C;Age> ages)</code></td>\n<td align=\"left\"><code>… where x.age not in ?1</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>True</code></td>\n<td align=\"left\"><code>findByActiveTrue()</code></td>\n<td align=\"left\"><code>… where x.active = true</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>False</code></td>\n<td align=\"left\"><code>findByActiveFalse()</code></td>\n<td align=\"left\"><code>… where x.active = false</code></td>\n</tr>\n<tr>\n<td align=\"left\"><code>IgnoreCase</code></td>\n<td align=\"left\"><code>findByFirstnameIgnoreCase</code></td>\n<td align=\"left\"><code>… where UPPER(x.firstame) = UPPER(?1)</code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>사용 방법</p>\n<ul>\n<li>Repository Method</li>\n<li>@NamedQuery</li>\n<li>@Query</li>\n</ul>\n</li>\n</ul>\n<h3>Statement / Prepared Statement 클래스</h3>\n<p>SQL을 실행할 수 있는 클래스로, 큰 차이는 캐시 사용여부이다.</p>\n<h4>Statement 클래스</h4>\n<ul>\n<li>단일로 사용될 때 속도가 빠르다.</li>\n<li>쿼리에 인자를 부여할 수 없다.</li>\n<li>매번 컴파일을 수행해야 한다.</li>\n</ul>\n<h4>PreparedStatement 클래스</h4>\n<ul>\n<li>쿼리에 인자를 부여할 수 있다.</li>\n<li>처음 프리 컴파일된 후, 이후에는 컴파일을 수행하지 않는다.</li>\n<li>여러번 수행될 때 속도가 빠르다.</li>\n<li>\n<p>동작 방식</p>\n<ul>\n<li>애플리케이션은 특정값은 지정하지 않은 채로 틀을 만들고 DBMS로 보낸다.</li>\n<li>DBMS는 틀을 컴파일(최적화 및 변환)하며 실행하지 않고 결과만 저장한다.</li>\n<li>변수에 값을 지정하면 실행하고, 여러 값으로 원하는 횟수만큼 실행할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h2>References</h2>\n<ul>\n<li>JPA Document <a href=\"https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#reference\">https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#reference</a></li>\n<li>JPA Query <a href=\"https://www.baeldung.com/jpa-query-parameters\">https://www.baeldung.com/jpa-query-parameters</a></li>\n<li>JPA Specification: <a href=\"https://dzone.com/articles/using-spring-data-jpa-specification\">https://dzone.com/articles/using-spring-data-jpa-specification</a></li>\n<li>\n<p>JPA Specification Example: </p>\n<p><a href=\"https://velog.io/@hellozin/JPA-Specification%EC%9C%BC%EB%A1%9C-%EC%BF%BC%EB%A6%AC-%EC%A1%B0%EA%B1%B4-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\">https://velog.io/@hellozin/JPA-Specification%EC%9C%BC%EB%A1%9C-%EC%BF%BC%EB%A6%AC-%EC%A1%B0%EA%B1%B4-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0</a></p>\n</li>\n<li><a href=\"https://hojak99.tistory.com/503\">https://hojak99.tistory.com/503</a></li>\n<li><a href=\"https://javacan.tistory.com/entry/SpringDataJPA-Specifcation-Usage\">https://javacan.tistory.com/entry/SpringDataJPA-Specifcation-Usage</a></li>\n<li>Spring Data JPA와 QueryDSL 이해 <a href=\"https://ict-nroo.tistory.com/117\">https://ict-nroo.tistory.com/117</a></li>\n</ul>","id":"b4e07799-70a4-523d-90ec-741e18230194"},"allPosts":{"edges":[{"node":{"id":"f5d1f1a7-7c2c-5f6a-9046-a6fe333a0e41"},"next":{"fields":{"slug":"/posts/kafka/"},"frontmatter":{"title":"Kafka"}},"previous":null},{"node":{"id":"827bacda-b789-58c1-b114-dd1a84d2cf0b"},"next":{"fields":{"slug":"/posts/tdd-sample-project/"},"frontmatter":{"title":"TDD SAMPLE PROJECT"}},"previous":{"fields":{"slug":"/posts/spring-integration-구조/"},"frontmatter":{"title":"Spring Integration 구조"}}},{"node":{"id":"fe264f59-bd9f-53c6-97e3-5d09ab013a63"},"next":{"fields":{"slug":"/posts/e-tas-server-to-server-연동-batch/"},"frontmatter":{"title":"eTAS Server to Server 연동 Batch"}},"previous":{"fields":{"slug":"/posts/kafka/"},"frontmatter":{"title":"Kafka"}}},{"node":{"id":"24b2dd59-8191-53ef-a9a4-d121eb896a0e"},"next":{"fields":{"slug":"/posts/spring-batch/"},"frontmatter":{"title":"Spring Batch"}},"previous":{"fields":{"slug":"/posts/tdd-sample-project/"},"frontmatter":{"title":"TDD SAMPLE PROJECT"}}},{"node":{"id":"7b317632-317d-580c-bfa6-c53f96edeb52"},"next":{"fields":{"slug":"/posts/react-project-개발기/"},"frontmatter":{"title":"React Project 개발기"}},"previous":{"fields":{"slug":"/posts/e-tas-server-to-server-연동-batch/"},"frontmatter":{"title":"eTAS Server to Server 연동 Batch"}}},{"node":{"id":"e29c2d7f-1fd2-5913-a904-11996c231f54"},"next":{"fields":{"slug":"/posts/hadoop/"},"frontmatter":{"title":"Hadoop"}},"previous":{"fields":{"slug":"/posts/spring-batch/"},"frontmatter":{"title":"Spring Batch"}}},{"node":{"id":"7f695fca-e5ce-5c55-970b-e8855f99b61a"},"next":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}},"previous":{"fields":{"slug":"/posts/react-project-개발기/"},"frontmatter":{"title":"React Project 개발기"}}},{"node":{"id":"9f46ad6e-455d-53e9-8d4c-4794e5af39dd"},"next":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}},"previous":{"fields":{"slug":"/posts/hadoop/"},"frontmatter":{"title":"Hadoop"}}},{"node":{"id":"7470f1ce-f71d-5772-a8be-806ed3f7cc66"},"next":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}},"previous":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}}},{"node":{"id":"27ea8f29-94a3-5302-a637-efd0af842208"},"next":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}},"previous":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}}},{"node":{"id":"c54308e0-d7a2-5d1c-b8ae-ecbfd04ed1ac"},"next":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}},"previous":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}}},{"node":{"id":"c8b65dec-7fef-5ef0-a515-27ae182dff3e"},"next":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}},"previous":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}}},{"node":{"id":"6814abc2-41a1-520c-bd24-a8d2d02424fb"},"next":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}},"previous":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}}},{"node":{"id":"2fa87adf-6f94-54db-a8e4-7ab4990ba5e6"},"next":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}},"previous":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}}},{"node":{"id":"2311c1d2-b785-582e-a9a9-d80750b5d505"},"next":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}},"previous":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}}},{"node":{"id":"54319bda-39af-5fa4-9eee-7f84ee580c1a"},"next":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}},"previous":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}}},{"node":{"id":"443ae298-350d-531c-a42c-34e0acb0cdd8"},"next":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}},"previous":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}}},{"node":{"id":"2e8c37a8-a44a-5356-b617-dc7b22034c2a"},"next":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}},"previous":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}}},{"node":{"id":"64980158-2ad8-5c44-91a8-a0185a6d4f6b"},"next":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}},"previous":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}}},{"node":{"id":"5128821c-b701-5848-9979-bb91ec9c5836"},"next":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}},"previous":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}}},{"node":{"id":"d4549afd-0095-5810-b492-b843ca6e2f88"},"next":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}}},{"node":{"id":"e46642ac-6d65-51b8-a535-21a9e3eabb56"},"next":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}}},{"node":{"id":"46426481-29ee-5d00-aa6c-cf05d52490f6"},"next":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}},"previous":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}}},{"node":{"id":"6eed9dfa-e294-5b19-a225-cd43d6cb982a"},"next":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}},"previous":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}}},{"node":{"id":"f77c8cbf-3a58-53fc-bd32-592702676a11"},"next":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}},"previous":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}}},{"node":{"id":"f016fc75-8476-5493-8ac1-e2862773f3e7"},"next":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}},"previous":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}}},{"node":{"id":"9f5a9a91-7af6-5ca3-b20f-d6e177e46c68"},"next":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}},"previous":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}}},{"node":{"id":"b4e07799-70a4-523d-90ec-741e18230194"},"next":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}},"previous":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}}},{"node":{"id":"571df319-d1dd-59b6-a588-7a5db12c6b3d"},"next":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}},"previous":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}}},{"node":{"id":"ef05bf06-2d53-5323-820b-98f46a906289"},"next":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}},"previous":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}}},{"node":{"id":"a78eb59a-78b3-5c86-bcc2-f09ea58fab23"},"next":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}},"previous":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}}},{"node":{"id":"3c37f3d1-7097-5528-a31b-12bcdcd937ab"},"next":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}},"previous":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}}},{"node":{"id":"fe690dd1-ec0c-544b-a44f-131d80987565"},"next":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}},"previous":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}}},{"node":{"id":"b8c8c26f-09bc-5759-8a7e-c81ffbc8f2c0"},"next":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}},"previous":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}}},{"node":{"id":"6268f141-e6af-5f89-a55b-2174ef57651f"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}}},{"node":{"id":"1a663d51-139e-500f-a209-04faaebd2e85"},"next":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}},"previous":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}}},{"node":{"id":"b227a2c1-7853-5450-a1be-f3e1c83307b4"},"next":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"80979747-a7b7-5e5d-81bb-30729e2e16bd"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}}},{"node":{"id":"a82c048c-1eea-54e3-912d-ae875640e04e"},"next":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}},"previous":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}}},{"node":{"id":"18c2a54b-1a71-511c-824c-f437be00f3ef"},"next":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"d2056881-058f-5f23-88ec-cf613dff77f0"},"next":{"fields":{"slug":"/posts/web-rtc/"},"frontmatter":{"title":"WebRTC"}},"previous":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}}},{"node":{"id":"d54a4c19-013d-538a-893d-ff8f62d34d7a"},"next":null,"previous":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}}}]}},"pageContext":{"id":"b4e07799-70a4-523d-90ec-741e18230194"}},"staticQueryHashes":["2001315320"]}