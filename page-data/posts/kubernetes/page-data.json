{"componentChunkName":"component---src-templates-single-post-js","path":"/posts/kubernetes/","result":{"data":{"post":{"frontmatter":{"meta":{"title":"test meta title","description":"test meta description","noindex":null,"canonicalLink":null},"title":"Kubernetes","template":"SinglePost","subtitle":null,"date":"April 1st, 2020","categories":[{"category":"Study"}]},"html":"<p><img src=\"https://kubernetes.io/images/kubernetes-horizontal-color.png\" alt=\"kuberenetes\"></p>\n<h2>Index</h2>\n<ul>\n<li>kubernetes cluster 오케스트레이션 시스템</li>\n<li>kubernetes의 주요 기능과 개념</li>\n<li>실습</li>\n<li>컨테이너화된 application을 cluster에 배포하기</li>\n<li>deployment 스케일링하기</li>\n<li>컨테이너화된 앱을 새로운 소프트웨어 버전으로 업데이트하기</li>\n<li>컨테이너화된 앱을 디버그하기</li>\n</ul>\n<p>(*Minikube: 로컬에 설치할 수 있는 작은 규모의 kubernetes.)</p>\n<h3>Kubernetes</h3>\n<p>컨테이너화를 통해 소프트웨어 패키지하면 앱 다운타임 없이 쉽고 빠르게 릴리즈 및 업데이트 가능</p>\n<h2>1. Minikube를 사용해서 cluster 생성하기</h2>\n<h3>kubernetes cluster</h3>\n<ul>\n<li>kubernetes는 서로 연결되어 있어 단일 유닛처럼 동작. application 컨테이너를 cluster에 분산시키고 스케줄링하는 일을 보다 효율적으로 자동화.</li>\n<li>kubernetes cluster의 형태</li>\n<li>마스터: cluster 상호조정 (application 스케줄링, application의 항상성 유지, application 스케일링, 새로운 변경사항을 순서대로 반영하는 일 등 cluster 내 모든 활동을 조율)</li>\n<li>노드(kubernetes cluster 내 워커 머신으로써 동작하는 VM 또는 물리적인 컴퓨터): 앱 구동, 마스터가 제공하는 kubernetes API를 통해서 마스터와 통신</li>\n<li>Minikube는 로컬 머신에 VM을 만들고 하나의 노드로 구성된 cluster를 배포하는 가벼운 kubernetes 구현체</li>\n</ul>\n<h2>2. kubectl을 사용해서 deployment 생성하기</h2>\n<h3>kubernetes Deployment</h3>\n<ul>\n<li>kubernetes deployment 설정을 만들고, kubernetes cluster를 구동시키면 그 위에 컨테이너화된 application을 배포할 수 있다.</li>\n<li>deployment는 kubernetes가 application의 인스턴스를 어떻게 생성/업데이트해야 하는지 지시한다.</li>\n<li>deployment가 만들어지면 kubernetes master가 해당 app 인스턴스를 클러스터의 개별 노드에 스케줄한다.</li>\n<li>deployment controlor는 인스턴스를 지속적으로 모니터링하고, 구동 중인 노드가 다운되면 다른 노드의 인스턴스로 교체시켜 머신의 장애에 대응할 수 있는 자동 복구 메커니즘을 제공한다.</li>\n</ul>\n<h3>kubernetes에 첫 번째 application 배포하기</h3>\n<ul>\n<li>Kubectl(kubernetes CLI)를 통해 deployment 생성 및 관리</li>\n<li>Kubectl은 cluster와 상호작용하기 위해 kubernetes API 사용</li>\n</ul>\n<h2>kubernetes tutorial</h2>\n<p><a href=\"https://kubernetes.io/ko/docs/tutorials/\">https://kubernetes.io/ko/docs/tutorials/</a></p>\n<h2>example</h2>\n<p><a href=\"https://www.katacoda.com/courses/kubernetes\">https://www.katacoda.com/courses/kubernetes</a></p>\n<h2>blog</h2>\n<p><a href=\"https://bcho.tistory.com/1256?category=731548\">https://bcho.tistory.com/1256?category=731548</a></p>\n<h2>실습</h2>\n<h3>1. Launch A Single Node Cluster</h3>\n<ol>\n<li>Start Minikube</li>\n</ol>\n<pre><code>minikube version\n</code></pre>\n<ul>\n<li>minikube로 vm 시작. kubernetes cluster 동작</li>\n</ul>\n<pre><code>minikube start --wait=false\n</code></pre>\n<ol start=\"2\">\n<li>Cluster Info</li>\n<li>kuberctl CLI: kubernetes 관리, 앱 구동을 위한 도구</li>\n</ol>\n<pre><code>kuberctl cluster-info\n</code></pre>\n<ul>\n<li>Status가 Ready인지 확인</li>\n<li>앱에서 호스트가 사용할 수 있는 모든 노드를 보여줌</li>\n</ul>\n<pre><code>kubectl get nodes\n</code></pre>\n<ol start=\"3\">\n<li>Deploy Containers</li>\n<li>cluster에서 컨테이너 동작</li>\n</ol>\n<pre><code>kubectl create deployment first-deployment --image=katacoda/docker-http-server\n</code></pre>\n<ul>\n<li>status 확인</li>\n</ul>\n<pre><code>kubectl get pods\n</code></pre>\n<ul>\n<li>port 설정</li>\n</ul>\n<pre><code>kubectl expose deployment first-deployment --port=80 --type=NodePort\n</code></pre>\n<ul>\n<li>port 확인</li>\n</ul>\n<pre><code>export PORT=$(kubectl get svc first-deployment -o go-template='{{range.spec.ports}}{{if .nodePort}}{{.nodePort}}{{\"\\n\"}}{{end}}{{end}}')\n\necho \"Accessing host01:$PORT\"\n\ncurl host01:$PORT\n</code></pre>\n<ol start=\"4\">\n<li>Dashboard</li>\n<li>dashboard 활성화</li>\n</ol>\n<pre><code>minikube addons enable dashboard\n</code></pre>\n<ul>\n<li>katacoda 이용해서 yaml의 정의 실행</li>\n</ul>\n<pre><code>kubectl apply -f /opt/kubernetes-dashboard.yaml\n</code></pre>\n<ul>\n<li>dashboard 보기 (<a href=\"https://2886795331-30000-cykoria03.environments.katacoda.com/\">https://2886795331-30000-cykoria03.environments.katacoda.com/</a>)</li>\n</ul>\n<pre><code>kubectl get pods -n kubernetes-dashboard -w\n</code></pre>\n<h3>2. Launch a multi-node cluster using Kubeadm</h3>\n<ol>\n<li>Initialise Master</li>\n<li>cluster initialise</li>\n</ol>\n<pre><code>kubeadm init --token=102952.1a7dd4cc8d1f4cc5 --kubernetes-version $(kubeadm version -o short)\n</code></pre>\n<ul>\n<li>configuration을 home directory로 복사</li>\n</ul>\n<pre><code>sudo cp /etc/kubernetes/admin.conf $HOME/\n\nsudo chown $(id -u):$(id -g) $HOME/admin.conf\n\nexport KUBECONFIG=$HOME/admin.conf\n</code></pre>\n<ol start=\"2\">\n<li>Deploy Container Networking Interface(CNI)</li>\n<li>CNI: 여러 node와 workload가 어떻게 상호작용할지 정의(?)</li>\n<li>deployment definition 보기 (Weaveworks 사용)</li>\n</ol>\n<pre><code>cat /opt/weave-kube\n</code></pre>\n<ul>\n<li>kubectl apply를 통해 확인</li>\n</ul>\n<pre><code>kubectl apply -f /opt/weave-kube\n</code></pre>\n<ul>\n<li>status 확인</li>\n</ul>\n<pre><code>kubectl get pod -n kube-system\n</code></pre>\n<ol start=\"3\">\n<li>Join Cluster</li>\n<li>master와 CNI가 초기화되고 token을 가지고 있으면 cluster join이 가능하다. token 확인하기</li>\n</ol>\n<pre><code>kubeadm token list\n</code></pre>\n<ul>\n<li>새로운 node에 master node의 ip 주소로 cluster join</li>\n</ul>\n<pre><code>kubeadm join --discovery-token-unsafe-skip-ca-verification --token=102952.1a7dd4cc8d1f4cc5 172.17.0.39:6443\n</code></pre>\n<ol start=\"4\">\n<li>View Nodes</li>\n<li>2개 node(master, node01) ready</li>\n</ol>\n<pre><code>kubectl get nodes\n</code></pre>\n<ol start=\"5\">\n<li>Deploy Pod</li>\n<li>pod 생성</li>\n</ol>\n<pre><code>kubectl create deployment http --image=katacoda/docker-http-server:latest\n</code></pre>\n<ul>\n<li>pod status 확인</li>\n</ul>\n<pre><code>kubectl get pods\n</code></pre>\n<ul>\n<li>node01에서 Docker Container running</li>\n</ul>\n<pre><code>docker ps | grep docker-http-server\n</code></pre>\n<h3>3. Start Containers using Kubectl</h3>\n<ol>\n<li>Launch Cluster</li>\n<li>download Kubectl CLI</li>\n</ol>\n<pre><code>minikube start --wait=false\n</code></pre>\n<ul>\n<li>check node</li>\n</ul>\n<pre><code>kubectl get nodes\n</code></pre>","id":"a78eb59a-78b3-5c86-bcc2-f09ea58fab23"},"allPosts":{"edges":[{"node":{"id":"7f695fca-e5ce-5c55-970b-e8855f99b61a"},"next":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}},"previous":null},{"node":{"id":"9f46ad6e-455d-53e9-8d4c-4794e5af39dd"},"next":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}},"previous":{"fields":{"slug":"/posts/hadoop/"},"frontmatter":{"title":"Hadoop"}}},{"node":{"id":"27ea8f29-94a3-5302-a637-efd0af842208"},"next":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}},"previous":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}}},{"node":{"id":"7470f1ce-f71d-5772-a8be-806ed3f7cc66"},"next":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}},"previous":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}}},{"node":{"id":"c54308e0-d7a2-5d1c-b8ae-ecbfd04ed1ac"},"next":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}},"previous":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}}},{"node":{"id":"c8b65dec-7fef-5ef0-a515-27ae182dff3e"},"next":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}},"previous":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}}},{"node":{"id":"6814abc2-41a1-520c-bd24-a8d2d02424fb"},"next":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}},"previous":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}}},{"node":{"id":"2fa87adf-6f94-54db-a8e4-7ab4990ba5e6"},"next":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}},"previous":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}}},{"node":{"id":"2311c1d2-b785-582e-a9a9-d80750b5d505"},"next":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}},"previous":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}}},{"node":{"id":"54319bda-39af-5fa4-9eee-7f84ee580c1a"},"next":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}},"previous":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}}},{"node":{"id":"443ae298-350d-531c-a42c-34e0acb0cdd8"},"next":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}},"previous":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}}},{"node":{"id":"2e8c37a8-a44a-5356-b617-dc7b22034c2a"},"next":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}},"previous":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}}},{"node":{"id":"64980158-2ad8-5c44-91a8-a0185a6d4f6b"},"next":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}},"previous":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}}},{"node":{"id":"5128821c-b701-5848-9979-bb91ec9c5836"},"next":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}},"previous":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}}},{"node":{"id":"d4549afd-0095-5810-b492-b843ca6e2f88"},"next":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}}},{"node":{"id":"e46642ac-6d65-51b8-a535-21a9e3eabb56"},"next":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}}},{"node":{"id":"46426481-29ee-5d00-aa6c-cf05d52490f6"},"next":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}},"previous":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}}},{"node":{"id":"6eed9dfa-e294-5b19-a225-cd43d6cb982a"},"next":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}},"previous":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}}},{"node":{"id":"f016fc75-8476-5493-8ac1-e2862773f3e7"},"next":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}},"previous":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}}},{"node":{"id":"9f5a9a91-7af6-5ca3-b20f-d6e177e46c68"},"next":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}},"previous":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}}},{"node":{"id":"f77c8cbf-3a58-53fc-bd32-592702676a11"},"next":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}},"previous":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}}},{"node":{"id":"b4e07799-70a4-523d-90ec-741e18230194"},"next":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}},"previous":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}}},{"node":{"id":"571df319-d1dd-59b6-a588-7a5db12c6b3d"},"next":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}},"previous":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}}},{"node":{"id":"ef05bf06-2d53-5323-820b-98f46a906289"},"next":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}},"previous":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}}},{"node":{"id":"a78eb59a-78b3-5c86-bcc2-f09ea58fab23"},"next":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}},"previous":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}}},{"node":{"id":"3c37f3d1-7097-5528-a31b-12bcdcd937ab"},"next":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}},"previous":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}}},{"node":{"id":"fe690dd1-ec0c-544b-a44f-131d80987565"},"next":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}},"previous":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}}},{"node":{"id":"b8c8c26f-09bc-5759-8a7e-c81ffbc8f2c0"},"next":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}},"previous":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}}},{"node":{"id":"6268f141-e6af-5f89-a55b-2174ef57651f"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}}},{"node":{"id":"1a663d51-139e-500f-a209-04faaebd2e85"},"next":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}},"previous":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}}},{"node":{"id":"b227a2c1-7853-5450-a1be-f3e1c83307b4"},"next":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"80979747-a7b7-5e5d-81bb-30729e2e16bd"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}}},{"node":{"id":"a82c048c-1eea-54e3-912d-ae875640e04e"},"next":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}},"previous":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}}},{"node":{"id":"18c2a54b-1a71-511c-824c-f437be00f3ef"},"next":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"d2056881-058f-5f23-88ec-cf613dff77f0"},"next":{"fields":{"slug":"/posts/web-rtc/"},"frontmatter":{"title":"WebRTC"}},"previous":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}}},{"node":{"id":"d54a4c19-013d-538a-893d-ff8f62d34d7a"},"next":null,"previous":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}}}]}},"pageContext":{"id":"a78eb59a-78b3-5c86-bcc2-f09ea58fab23"}},"staticQueryHashes":["2001315320"]}