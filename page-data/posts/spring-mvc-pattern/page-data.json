{"componentChunkName":"component---src-templates-single-post-js","path":"/posts/spring-mvc-pattern/","result":{"data":{"post":{"frontmatter":{"meta":{"title":"test meta title","description":"test meta description","noindex":null,"canonicalLink":null},"title":"Spring MVC Pattern","template":"SinglePost","subtitle":null,"date":"April 7th, 2020","categories":[{"category":"Spring"}]},"html":"<p>MVC는 Design Pattern 중 하나이다.</p>\n<h2>Design Pattern</h2>\n<ul>\n<li>디자인 패턴은 상황에 따라 자주 쓰이는 설계 방법을 정리한 <code>개발 방법론</code>이다.</li>\n<li>보편적으로 적용해볼 수 있는 해결책을 정의해 놓은 것</li>\n</ul>\n<h3>MVC Pattern</h3>\n<ul>\n<li>MVC (<code>Model</code> <code>View</code> <code>Controller</code>)</li>\n<li>application/service 등을 구현할 때 해당 시스템을 3가지로 구분한 방법론</li>\n</ul>\n<p><img src=\"https://www.researchgate.net/profile/Jan-Wielemaker/publication/254852917/figure/fig3/AS:669454635630607@1536621831811/Model-View-Controller-MVC-design-pattern-Controllers-modify-UI-aspects-of-a-view.png\" alt=\"mvc pattern image\"></p>\n<h4>1. Model</h4>\n<ul>\n<li>application의 <code>데이터</code>를 나타낸다.</li>\n<li>database application 단에서 맨 처음 정의되는 여러 변수, 상수 등 혹은 이러한 데이터들을 다루기 위한 여러 쿼리를 비롯한 기능들도 포함될 수 있다.</li>\n<li><code>MVC Model 규칙</code>: 사용자는 최종적으로 오직 Model을 통해서만 데이터에 접근한다. 나머지 View, Controller단에서 내부 속성값을 가지면 안된다. 따라서 다른 컴포넌트가 모델의 데이터를 변경하고 싶을 때 다른 컴포넌트 간의 통신 수단을 구현해야 한다.</li>\n</ul>\n<h4>2. View</h4>\n<ul>\n<li>사용자에게 application의 <code>UI</code> 등을 통해 화면에 보여주기 위한 역할을 맡고 있다.</li>\n<li>web의 경우 html, css, js 등이 될 수 있다.</li>\n<li>View는 사용자에게 화면을 보여주는 역할 외에 타 역할에 절대 관여하지 않는다.</li>\n</ul>\n<h4>3. Controller</h4>\n<ul>\n<li>Model과 View의 중간 다리 역할을 수행한다.</li>\n<li>사용자가 View에서 제공된 화면에서 입력을 비롯한 \"이벤트\"에 대하여 기능을 수행할 때 그것을 Controller가 받아서 수행한다.</li>\n<li>Model과 View는 Controller를 통해 <code>상호작용</code>하므로 application의 핵심 로직이다.</li>\n</ul>\n<h3>MVC 작동방식</h3>\n<ol>\n<li>User가 View를 통해 소통</li>\n<li>Controller가 Model에게 <code>Status를 변경</code>하라고 요청</li>\n<li>Model의 Status가 변경되면 <code>View에게 알림</code></li>\n<li>View에서 Model에게 Status에 대한 <code>data 요청</code></li>\n</ol>\n<h4>필요성</h4>\n<ul>\n<li>구조화되어 코드가 나눠져 있어 <code>유지보수가 용이</code>하다.</li>\n<li>Model에 데이터가 체계적으로 관리되어 중복된 변수 사용 없이 이미 존재하는 데이터를 참조할 수 있다.</li>\n</ul>\n<h4>단점</h4>\n<ul>\n<li>Model과 View의 의존성이 완전히 분리될 수 없기 때문에 설계 구조가 복잡해질 수 있다.</li>\n</ul>\n<h4>MVC Pattern의 예</h4>\n<ul>\n<li>AngularJS</li>\n<li>CodeIgniter</li>\n<li>Python</li>\n<li>Django</li>\n<li>React</li>\n</ul>\n<h3>Web MVC Framework</h3>\n<p>Spring MVC의 설정 방법만 익혀두면 <code>웹 개발</code>에 필요한 다양한 기능을 구현할 수 있다.</p>\n<h4>1. Project 생성</h4>\n<ul>\n<li>webapp은 html, css, js, jsp 등 <code>web application</code>을 구현하는데 필요한 코드가 위치</li>\n<li>\n<p>WEB-INF에는 <code>web.xml</code> 파일이 위치 (servlet spec에 따르면 WEB-INF 폴더 하위에 lib와 classes 폴더와 jar, compile된 class 파일이 위치해야 하지만 maven이나 gradle의 경우 의존을 통해 필요한 jar 파일을 지정하므로 compile된 결과는 target 폴더나 build 폴더에 위치한다.)</p>\n<pre><code>src/main/java\nsrc/main/webapp\nsrc/main/webapp/WEB-INF\nsrc/main/webapp/WEB_INF/view\n</code></pre>\n</li>\n<li>\n<p>war(web application archive)의 기본값은 jar로서 servlet/JSP를 이용한 web application을 개발할 경우 사용된다.</p>\n<pre><code class=\"language-java\">// pom.xml\n&#x3C;packaging>war&#x3C;/packaging>\n</code></pre>\n</li>\n<li>tomcat 설치 및 실행 환경 등록</li>\n</ul>\n<h4>2. Spring MVC를 위한 설정</h4>\n<ul>\n<li>Spring MVC의 주요 설정(<code>HandlerMApping</code>, <code>ViewResolver</code> 등)</li>\n<li>Spring의 <code>DispatcherServlet</code> 설정</li>\n</ul>\n<pre><code class=\"language-java\">// MvcConfig.java\n\n...\n\n@Configuration\n\n@EnableWebMvc\n\npublic class MvcConfig implements WebMvcConfigurer {\n\n\n@Override\n\npublic void configureDefaulServletHandling(\n\nDefaultServletHandlerConfigurer configurer) {\n\nconfigurer.enable();\n\n}\n\n\n@Override\n\npublic void configureViewResolvers(ViewResolverRegistry registry) {\n\nregistry.jsp(\"/WEB_INF/view/\", \".jsp\");\n\n}\n\n}\n</code></pre>\n<ul>\n<li>@EnableWebMvc: Spring MVC 설정을 <code>활성화</code>한다. Spring MVC를 사용하는데 필요한 다양한 설정을 생성한다.</li>\n<li>configureDefaulServletHandling: <code>DispatcherServlet</code>의 mapping 경로를 '/'로 주었을 때, <code>JSP/HTML/CSS 등을 올바르게 처리</code>하기 위한 설정을 추가한다.</li>\n<li>\n<p>configureViewResolvers: JSP를 이용해서 <code>Controller의 실행 결과</code>를 보여주기 위한 설정을 추가한다.</p>\n<p>@EnableWebMvc</p>\n</li>\n<li>\n<p>내부적으로 다양한 빈 설정을 추가해준다.</p>\n<p>configureDefaultServletHandlig(), configureViewResolvers()</p>\n</li>\n<li>WebMvcConfigurer interface에 정의된 method로 각각 default servlet과 ViewResolver과 관련된 설정을 조정한다.</li>\n<li>web.xml 파일에 DispatcherServlet 설정</li>\n</ul>\n<p>Spring MVC가 웹 요청을 처리하려면 DispatcherServlet을 통해서 웹 요청을 받아야 한다. 이를 위해 web.xml에 DispatcherServlet을 등록한다.</p>\n<pre><code class=\"language-java\">// src/main/webapp/WEB-INF/web.xml\n\n...\n\n&#x3C;servlet>\n\n&#x3C;servlet-name>dispatcher&#x3C;/servlet-name>\n\n&#x3C;servlet-class>\n\norg.springframework.web.servlet.DispatcherServlet\n\n&#x3C;/servlet-class>\n\n&#x3C;init-param>\n\n&#x3C;param-name>contextClass&#x3C;/param-name>\n\n&#x3C;param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext&#x3C;/param-value>\n\n&#x3C;/init-param>\n</code></pre>","id":"64980158-2ad8-5c44-91a8-a0185a6d4f6b"},"allPosts":{"edges":[{"node":{"id":"7f695fca-e5ce-5c55-970b-e8855f99b61a"},"next":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}},"previous":null},{"node":{"id":"9f46ad6e-455d-53e9-8d4c-4794e5af39dd"},"next":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}},"previous":{"fields":{"slug":"/posts/hadoop/"},"frontmatter":{"title":"Hadoop"}}},{"node":{"id":"27ea8f29-94a3-5302-a637-efd0af842208"},"next":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}},"previous":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}}},{"node":{"id":"7470f1ce-f71d-5772-a8be-806ed3f7cc66"},"next":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}},"previous":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}}},{"node":{"id":"c54308e0-d7a2-5d1c-b8ae-ecbfd04ed1ac"},"next":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}},"previous":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}}},{"node":{"id":"c8b65dec-7fef-5ef0-a515-27ae182dff3e"},"next":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}},"previous":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}}},{"node":{"id":"6814abc2-41a1-520c-bd24-a8d2d02424fb"},"next":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}},"previous":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}}},{"node":{"id":"2fa87adf-6f94-54db-a8e4-7ab4990ba5e6"},"next":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}},"previous":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}}},{"node":{"id":"2311c1d2-b785-582e-a9a9-d80750b5d505"},"next":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}},"previous":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}}},{"node":{"id":"54319bda-39af-5fa4-9eee-7f84ee580c1a"},"next":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}},"previous":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}}},{"node":{"id":"443ae298-350d-531c-a42c-34e0acb0cdd8"},"next":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}},"previous":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}}},{"node":{"id":"2e8c37a8-a44a-5356-b617-dc7b22034c2a"},"next":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}},"previous":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}}},{"node":{"id":"64980158-2ad8-5c44-91a8-a0185a6d4f6b"},"next":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}},"previous":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}}},{"node":{"id":"5128821c-b701-5848-9979-bb91ec9c5836"},"next":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}},"previous":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}}},{"node":{"id":"d4549afd-0095-5810-b492-b843ca6e2f88"},"next":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}}},{"node":{"id":"e46642ac-6d65-51b8-a535-21a9e3eabb56"},"next":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}}},{"node":{"id":"46426481-29ee-5d00-aa6c-cf05d52490f6"},"next":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}},"previous":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}}},{"node":{"id":"6eed9dfa-e294-5b19-a225-cd43d6cb982a"},"next":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}},"previous":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}}},{"node":{"id":"f016fc75-8476-5493-8ac1-e2862773f3e7"},"next":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}},"previous":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}}},{"node":{"id":"9f5a9a91-7af6-5ca3-b20f-d6e177e46c68"},"next":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}},"previous":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}}},{"node":{"id":"f77c8cbf-3a58-53fc-bd32-592702676a11"},"next":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}},"previous":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}}},{"node":{"id":"b4e07799-70a4-523d-90ec-741e18230194"},"next":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}},"previous":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}}},{"node":{"id":"571df319-d1dd-59b6-a588-7a5db12c6b3d"},"next":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}},"previous":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}}},{"node":{"id":"ef05bf06-2d53-5323-820b-98f46a906289"},"next":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}},"previous":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}}},{"node":{"id":"a78eb59a-78b3-5c86-bcc2-f09ea58fab23"},"next":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}},"previous":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}}},{"node":{"id":"3c37f3d1-7097-5528-a31b-12bcdcd937ab"},"next":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}},"previous":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}}},{"node":{"id":"fe690dd1-ec0c-544b-a44f-131d80987565"},"next":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}},"previous":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}}},{"node":{"id":"b8c8c26f-09bc-5759-8a7e-c81ffbc8f2c0"},"next":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}},"previous":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}}},{"node":{"id":"6268f141-e6af-5f89-a55b-2174ef57651f"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}}},{"node":{"id":"1a663d51-139e-500f-a209-04faaebd2e85"},"next":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}},"previous":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}}},{"node":{"id":"b227a2c1-7853-5450-a1be-f3e1c83307b4"},"next":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"80979747-a7b7-5e5d-81bb-30729e2e16bd"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}}},{"node":{"id":"a82c048c-1eea-54e3-912d-ae875640e04e"},"next":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}},"previous":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}}},{"node":{"id":"18c2a54b-1a71-511c-824c-f437be00f3ef"},"next":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"d2056881-058f-5f23-88ec-cf613dff77f0"},"next":{"fields":{"slug":"/posts/web-rtc/"},"frontmatter":{"title":"WebRTC"}},"previous":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}}},{"node":{"id":"d54a4c19-013d-538a-893d-ff8f62d34d7a"},"next":null,"previous":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}}}]}},"pageContext":{"id":"64980158-2ad8-5c44-91a8-a0185a6d4f6b"}},"staticQueryHashes":["2001315320"]}