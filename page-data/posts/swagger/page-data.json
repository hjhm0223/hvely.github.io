{"componentChunkName":"component---src-templates-single-post-js","path":"/posts/swagger/","result":{"data":{"post":{"frontmatter":{"meta":{"title":"test meta title","description":"test meta description","noindex":null,"canonicalLink":null},"title":"Swagger","template":"SinglePost","subtitle":null,"date":"April 1st, 2020","categories":[{"category":"Study"}]},"html":"<p><img src=\"https://9b74456f2e4bcbc20970-51751c7e8fb38e7c8b474cab6c7dc602.ssl.cf5.rackcdn.com/2020-07/swagger_logo_1.png\" alt=\"swagger\"></p>\n<h2>Swagger 란?</h2>\n<p>API 문서화. <code>Open API Specification(OAS)</code>를 위한 프레임워크</p>\n<ul>\n<li>Swagger 공식 사이트: <a href=\"https://swagger.io/\">https://swagger.io/</a></li>\n<li>License: Apache 2.0</li>\n</ul>\n<h3>기능</h3>\n<ul>\n<li>API 디자인: <code>Swagger-editor</code>를 통한 api 문서화</li>\n<li>API Development: <code>Swagger-codegen</code>을 통해 작성된 문서로 SDK를 생성하여 빌드 프로세스 간소화</li>\n<li>API Documentation: <code>Swagger-UI</code>를 통해 작성된 API 시각화</li>\n<li>API Testing: <code>Swagger-Inspector</code>를 통해 API를 시각화하고 빠른 테스트 진행</li>\n<li>Standardize: <code>Swagger-hub</code>를 통해 개인, 팀원들이 API 정보 공유</li>\n</ul>\n<h3>특징</h3>\n<ul>\n<li>API가 변경될 때 문서 변경을 자동화</li>\n<li>API가 가지고 있는 스펙을 명세, 관리할 수 있어 테스트 및 유지보수에 좋다.</li>\n<li>Swagger는 기본적으로 YAML 포맷을 이용해 Docs 문서 작성</li>\n<li>NodeJS, Java, Python 등 다양한 언어 지원</li>\n</ul>\n<h2>Open API Specification 3.0</h2>\n<p>Open API 표준 명세</p>\n<ul>\n<li>gitlab: <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md\">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md</a></li>\n<li>swagger: <a href=\"https://swagger.io/docs/specification/basic-structure/\">https://swagger.io/docs/specification/basic-structure/</a></li>\n<li>license: Apache 2.0</li>\n</ul>\n<pre><code class=\"language-yml\"># meta data\nopenapi: 3.0.0\ninfo:\ntitle: Sample API\ndescription: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.\nversion: 0.1.9\n\n# server 정보\nservers:\n- url: http://api.example.com/v1\ndescription: Optional server description, e.g. Main (production) server\n- url: http://staging-api.example.com\ndescription: Optional server description, e.g. Internal staging server for testing\n\n# data type\n\n# api 정의\n\n# path 정의\npaths:\n/users:\nget:\nsummary: Returns a list of users.\ndescription: Optional extended description in CommonMark or HTML\nresponses:\n'200':\ndescription: A JSON array of user names\ncontent:\napplication/json:\nschema:\ntype: array\nitems:\ntype: string\n\n# parameter 정의\npaths:\n/user/{userId}:\nget:\nsummary: Returns a user by ID.\nparameters:\n- name: userId\nin: path\nrequired: true\ndescription: Parameter description in CommonMark or HTML.\nschema:\ntype : integer\nformat: int64\nminimum: 1\nresponses:\n'200':\ndescription: OK\n\n# request body\npaths:\n/pets:\npost:\nsummary: Add a new pet\nrequestBody:\ndescription: Optional description in *Markdown*\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/Pet'\n/pets:\npost:\npaths:\n/users:\npost:\nsummary: Creates a user.\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\ntype: object\nproperties:\nusername:\ntype: string\nresponses:\n'201':\ndescription: Created\n\n# response\npaths:\n/user/{userId}:\nget:\nsummary: Returns a user by ID.\nparameters:\n- name: userId\nin: path\nrequired: true\ndescription: The ID of the user to return.\nschema:\ntype: integer\nformat: int64\nminimum: 1\nresponses:\n'200':\ndescription: A user object.\ncontent:\napplication/json:\nschema:\ntype: object\nproperties:\nid:\ntype: integer\nformat: int64\nexample: 4\nname:\ntype: string\nexample: Jessica Smith\n'400':\ndescription: The specified user ID is invalid (not a number).\n'404':\ndescription: A user with the specified ID was not found.\ndefault:\ndescription: Unexpected error\n\n# Input and Output Models\n\n# Input\ncomponents:\nschemas:\nUser:\nproperties:\nid:\ntype: integer\nname:\ntype: string\n\n# Both properties are required\nrequired:\n- id\n- name\n\n# Output\npaths:\n/users/{userId}:\nget:\nsummary: Returns a user by ID.\nparameters:\n- in: path\nname: userId\nrequired: true\ntype: integer\nresponses:\n'200':\ndescription: OK\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/User'\n/users:\npost:\nsummary: Creates a new user.\nrequestBody:\nrequired: true\ncontent:\napplication/json:\nschema:\n$ref: '#/components/schemas/User'\nresponses:\n'201':\ndescription: Created\n\n\n# Authentication\ncomponents:\nsecuritySchemes:\nBasicAuth:\ntype: http\nscheme: basic\nsecurity:\n- BasicAuth: []\n</code></pre>\n<h2>Spring에서의 사용</h2>\n<h3>1. 의존성 추가</h3>\n<pre><code class=\"language-conf\">&#x3C;!-- maven -->\n&#x3C;dependency>\n&#x3C;groupId>io.springfox&#x3C;/groupId>\n&#x3C;artifactId>springfox-swagger2&#x3C;/artifactId>\n&#x3C;version>2.6.1&#x3C;/version>\n&#x3C;/dependency>\n&#x3C;dependency>\n&#x3C;groupId>io.springfox&#x3C;/groupId>\n&#x3C;artifactId>springfox-swagger-ui&#x3C;/artifactId>\n&#x3C;version>2.6.1&#x3C;/version>\n&#x3C;/dependency>\n</code></pre>\n<pre><code class=\"language-conf\">&#x3C;!-- gradle -->\ndependencies {\nimplementation 'org.springframework.boot:spring-boot-starter-web'\ncompile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'\ncompile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'\ntestImplementation('org.springframework.boot:spring-boot-starter-test') {\nexclude group: 'org.junit.vintage', module: 'junit-vintage-engine'\n}\n}\n</code></pre>\n<h3>2. Config 파일 작성</h3>\n<ul>\n<li><code>@EnableSwagger2</code>: Swagger 2버전 활성화하는 Annotation</li>\n<li><code>Docket</code>: Swagger 설정하는 Bean.</li>\n<li>API 스펙은 Controller에서 작성</li>\n<li>\n<p>설정정보</p>\n<ul>\n<li>useDefaultResponseMessages(): swagger에서 제공해주는 응답코드(200, 401, 403, 404)에 대한 기본 메시지. false면 제거. controller에서 명시할 수 있음.</li>\n<li>groupName(): Docket Bean이 여러개일 경우 충돌하지 않도록 버전 명시</li>\n<li>select(): ApiSelectorBuilder 생성</li>\n<li>apis(): api 스펙이 작성되어 있는 패키지(controller) 지정. RequestMapping(GetMapping, PostMapping 등)이 선언된 API 문서화</li>\n<li>paths(): apis()로 선택된 API 중 특정 path 조건에 맞는 API들을 필터링하여 문서화</li>\n<li>apiInfo(): 제목, 설명 등 문서에 대한 정보를 보여주기 위해 호출. parameter: public ApiInfo( title, description, version, termsOfServiceUrl, contact, license, licenseUrl, vendorExtensions )</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-java\">@Configuration\n@EnableSwagger2\npublic class SwaggerConfig {\n\n  @Bean\n  public Docket api() {\n    return new Docket(DocumentationType.SWAGGER_2)\n                .select()\n                .apis(RequestHandlerSelectors.basePackage(\"example.api.control\"))\n                .paths(PathSelectors.any())\n                .build();\n  }\n}\n</code></pre>\n<h3>3. controller 작성</h3>\n<ul>\n<li>\n<p><code>@Api</code>: 해당 클래스가 Swagger resource임을 명시</p>\n<ul>\n<li>value: 태그</li>\n<li>tags: 여러개의 태그 정의</li>\n</ul>\n</li>\n<li>\n<p><code>@ApiOperation</code>: API URL과 메소드 선언</p>\n<ul>\n<li>value: API에 대한 간략한 설명</li>\n<li>notes: 자세한 설명</li>\n</ul>\n</li>\n<li>\n<p><code>@ApiResponse</code>: operation의 가능한 response 명시</p>\n<ul>\n<li>code: 응답코드</li>\n<li>message: 응답에 대한 설명</li>\n<li>responseHeaders: 헤더</li>\n</ul>\n</li>\n<li>\n<p><code>@ApiParam</code>: 파라미터 정보 명시</p>\n<ul>\n<li>value: 파라미터 정보</li>\n<li>required: 필수이면 true</li>\n<li>example: 테스트할 때 예시</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://t1.daumcdn.net/cfile/tistory/99FAD94F5E56616519?download\" alt=\"swagger.png\"></p>\n<pre><code class=\"language-java\">@RestController\n@Api(value = \"BoardController V2\")\n@RequestMapping(\"/v1/api\")\npublic class BoardControllerV1 {\n\n  @ApiOperation(value = \"exam\", notes = \"예제입니다.\")\n  @ApiResponses({\n    @ApiResponse(code = 200, message = \"OK !!\"),\n    @ApiResponse(code = 500, message = \"Internal Server Error !!\"),\n    @ApiResponse(code = 404, message = \"Not Found !!\")\n  })\n  @GetMapping(value = \"/board\")\n  public Map&#x3C;String, String> selectOneBoard(@ApiParam(value = \"게시판번호\", required = true, example = \"1\") @RequestParam String no) {\n    Map&#x3C;String, String> result = new HashMap&#x3C;>();\n    result.put(\"author\", \"victolee\");\n    result.put(\"content\", \"V1 API 내용\");\n    return result;\n  }\n}\n</code></pre>\n<h2>참조</h2>\n<ul>\n<li>spring 사용: <a href=\"https://victorydntmd.tistory.com/341\">https://victorydntmd.tistory.com/341</a></li>\n<li>OAS3.0: <a href=\"https://swagger.io/docs/specification/basic-structure/\">https://swagger.io/docs/specification/basic-structure/</a>, <a href=\"https://joont92.github.io/openAPI/OAS-3-0/\">https://joont92.github.io/openAPI/OAS-3-0/</a></li>\n</ul>","id":"18c2a54b-1a71-511c-824c-f437be00f3ef"},"allPosts":{"edges":[{"node":{"id":"7f695fca-e5ce-5c55-970b-e8855f99b61a"},"next":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}},"previous":null},{"node":{"id":"9f46ad6e-455d-53e9-8d4c-4794e5af39dd"},"next":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}},"previous":{"fields":{"slug":"/posts/hadoop/"},"frontmatter":{"title":"Hadoop"}}},{"node":{"id":"27ea8f29-94a3-5302-a637-efd0af842208"},"next":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}},"previous":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}}},{"node":{"id":"7470f1ce-f71d-5772-a8be-806ed3f7cc66"},"next":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}},"previous":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}}},{"node":{"id":"c54308e0-d7a2-5d1c-b8ae-ecbfd04ed1ac"},"next":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}},"previous":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}}},{"node":{"id":"c8b65dec-7fef-5ef0-a515-27ae182dff3e"},"next":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}},"previous":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}}},{"node":{"id":"6814abc2-41a1-520c-bd24-a8d2d02424fb"},"next":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}},"previous":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}}},{"node":{"id":"2fa87adf-6f94-54db-a8e4-7ab4990ba5e6"},"next":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}},"previous":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}}},{"node":{"id":"2311c1d2-b785-582e-a9a9-d80750b5d505"},"next":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}},"previous":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}}},{"node":{"id":"54319bda-39af-5fa4-9eee-7f84ee580c1a"},"next":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}},"previous":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}}},{"node":{"id":"443ae298-350d-531c-a42c-34e0acb0cdd8"},"next":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}},"previous":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}}},{"node":{"id":"2e8c37a8-a44a-5356-b617-dc7b22034c2a"},"next":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}},"previous":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}}},{"node":{"id":"64980158-2ad8-5c44-91a8-a0185a6d4f6b"},"next":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}},"previous":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}}},{"node":{"id":"5128821c-b701-5848-9979-bb91ec9c5836"},"next":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}},"previous":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}}},{"node":{"id":"d4549afd-0095-5810-b492-b843ca6e2f88"},"next":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}}},{"node":{"id":"e46642ac-6d65-51b8-a535-21a9e3eabb56"},"next":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}}},{"node":{"id":"46426481-29ee-5d00-aa6c-cf05d52490f6"},"next":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}},"previous":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}}},{"node":{"id":"6eed9dfa-e294-5b19-a225-cd43d6cb982a"},"next":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}},"previous":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}}},{"node":{"id":"f016fc75-8476-5493-8ac1-e2862773f3e7"},"next":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}},"previous":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}}},{"node":{"id":"9f5a9a91-7af6-5ca3-b20f-d6e177e46c68"},"next":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}},"previous":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}}},{"node":{"id":"f77c8cbf-3a58-53fc-bd32-592702676a11"},"next":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}},"previous":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}}},{"node":{"id":"b4e07799-70a4-523d-90ec-741e18230194"},"next":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}},"previous":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}}},{"node":{"id":"571df319-d1dd-59b6-a588-7a5db12c6b3d"},"next":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}},"previous":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}}},{"node":{"id":"ef05bf06-2d53-5323-820b-98f46a906289"},"next":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}},"previous":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}}},{"node":{"id":"a78eb59a-78b3-5c86-bcc2-f09ea58fab23"},"next":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}},"previous":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}}},{"node":{"id":"3c37f3d1-7097-5528-a31b-12bcdcd937ab"},"next":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}},"previous":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}}},{"node":{"id":"fe690dd1-ec0c-544b-a44f-131d80987565"},"next":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}},"previous":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}}},{"node":{"id":"b8c8c26f-09bc-5759-8a7e-c81ffbc8f2c0"},"next":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}},"previous":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}}},{"node":{"id":"6268f141-e6af-5f89-a55b-2174ef57651f"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}}},{"node":{"id":"1a663d51-139e-500f-a209-04faaebd2e85"},"next":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}},"previous":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}}},{"node":{"id":"b227a2c1-7853-5450-a1be-f3e1c83307b4"},"next":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"80979747-a7b7-5e5d-81bb-30729e2e16bd"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}}},{"node":{"id":"a82c048c-1eea-54e3-912d-ae875640e04e"},"next":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}},"previous":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}}},{"node":{"id":"18c2a54b-1a71-511c-824c-f437be00f3ef"},"next":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"d2056881-058f-5f23-88ec-cf613dff77f0"},"next":{"fields":{"slug":"/posts/web-rtc/"},"frontmatter":{"title":"WebRTC"}},"previous":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}}},{"node":{"id":"d54a4c19-013d-538a-893d-ff8f62d34d7a"},"next":null,"previous":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}}}]}},"pageContext":{"id":"18c2a54b-1a71-511c-824c-f437be00f3ef"}},"staticQueryHashes":["2001315320"]}