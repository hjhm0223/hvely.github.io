{"componentChunkName":"component---src-templates-single-post-js","path":"/posts/tdd-sample-project/","result":{"data":{"post":{"frontmatter":{"meta":{"title":"test meta title","description":"test meta description","noindex":null,"canonicalLink":null},"title":"TDD SAMPLE PROJECT","template":"SinglePost","subtitle":null,"date":"March 16th, 2022","categories":[{"category":"Study"}]},"html":"<h2>TDD SAMPLE PROJECT</h2>\n<hr>\n<h3>1. <code>gradle</code> project 생성 후 JAVA 8 이상 선택</h3>\n<ul>\n<li>Junit은 자동으로 dependency에 추가되어 있어 따로 설정 필요 X</li>\n</ul>\n<blockquote>\n<p><code>maven</code> project의 경우 JAVA 선택 후 프로젝트 생성<br>\nFile > Project Structure > Modules > dependencies > +클릭 > Library > From Maven > <code>org.junit.jupiter:junit-jupiter:5.5.0</code> 검색 후 다운로드</p>\n</blockquote>\n<br>\n<h3>2. <code>src/test/java</code> 아래 테스트 코드 작성</h3>\n<ul>\n<li>\n<p>테스트 코드 작성</p>\n<pre><code class=\"language-java\">public class HelloWorldTest {\n  public static void main(String[] args) {\n     System.out.println(\"Hello World\");\n  }\n\n  @Test\n  void HelloTest() {\n    Assertions.assertEquals(1,1);\n    Assertions.assertEquals(1,2, \"error message\");\n    // expected와 actual이 다르면 테스트 시 실패 메시지 표시\n  }\n}   \n</code></pre>\n</li>\n<li>\n<p>코드 옆에 초록생 재생버튼 클릭 후 RUN</p>\n<ul>\n<li><code>Test Results</code>에 성공/오류 결과 확인</li>\n</ul>\n</li>\n<li><code>import static org.junit.jupiter.api.Assertions.*</code>로 받아오면 <code>Assertions</code> 생략 가능</li>\n</ul>\n<br>\n<h3>3. 자주 사용하는 메서드</h3>\n<ul>\n<li>\n<p><code>AssertionTest.java</code> 참조</p>\n<table>\n<thead>\n<tr>\n<th>메서드</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>assertEquals(expected, actual)</td>\n<td>실제 값이 기대하는 값과 같은지 검사</td>\n</tr>\n<tr>\n<td>assertNotEquals(unexpected, actual)</td>\n<td>실제 값이 특정 값과 같지 않은지 검사</td>\n</tr>\n<tr>\n<td>assertSame(Object unexpected, Object actual)</td>\n<td>두 객체가 동일한 객체인지 검사</td>\n</tr>\n<tr>\n<td>assertNotSame(Object unexpected, Object actual)</td>\n<td>두 객체가 동일하지 않은 객체인지 검사</td>\n</tr>\n<tr>\n<td>assertTrue(boolean condition)</td>\n<td>값이 true인지 검사</td>\n</tr>\n<tr>\n<td>assertFalse(boolean condition)</td>\n<td>값이 false인지 검사</td>\n</tr>\n<tr>\n<td>assertNull(Object actual)</td>\n<td>값이 null인지 검사</td>\n</tr>\n<tr>\n<td>assertNotNull(Object actual)</td>\n<td>값이 null이 아닌지 검사</td>\n</tr>\n<tr>\n<td>fail()</td>\n<td>테스트를 실패 처리</td>\n</tr>\n<tr>\n<td>assertThrows(Class<T> expected, Executable executable)</td>\n<td>executable을 실행한 결과로 지정한 타입의 예외가 발생하는지 검사</td>\n</tr>\n<tr>\n<td>assertDoesNotThrows(Executable executable)</td>\n<td>executable을 실행한 결과로 예외가 발생하지 않는지 검사</td>\n</tr>\n<tr>\n<td>assertAll(Executable executable)</td>\n<td>executable을 지정한 모든 검증을 실행하고 실패한 것이 있는지 검사</td>\n</tr>\n<tr>\n<td>assertTimeout(Duration timeout, Executable executable)</td>\n<td>executable을 지정한 검증을 지정된 시간 동안 실행하는지 검사, executable 루틴 실행이 완료될 때까지 대기</td>\n</tr>\n<tr>\n<td>assertTimeoutPreemptively(Duration timeout, Executable executable)</td>\n<td>executable을 지정한 검증을 지정된 시간 동안 실행하는지 검사, 지정된 시간을 초과하면 테스트 실패로 자동 종료</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<h3>4. 라이프 사이클</h3>\n<ul>\n<li>\n<p><code>LifeCycleTest.java</code> 참조</p>\n<table>\n<thead>\n<tr>\n<th>Annotation</th>\n<th>내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>@BeforeEach</td>\n<td>각각 테스트 메서드가 실행되기 전에 실행되어야 하는 메서드 명시. @Test, @RepeatTest, @ParameterizedTest, @TestFactory가 붙은 테스트 메서드가 실행하기 전에 실행. JUnit4의 @Before와 같은 역할. 테스트하기 전에 필요한 MockUp 데이터를 미리 세팅해주기 위해 주로 사용</td>\n</tr>\n<tr>\n<td>@BeforeAll</td>\n<td>@BeforeEach는 각 테스트 메서드마다 실행되지만, 이 Annotation은 테스트가 시작하기 전 딱 한번만 실행</td>\n</tr>\n<tr>\n<td>@AfterEach</td>\n<td>@Test, @RepeatTest, @ParameterizedTest, @TestFactory가 붙은 테스트 메서드가 실행되고 난 후 실행. JUnit4의 @After Annotation과 같은 역할</td>\n</tr>\n<tr>\n<td>@AfterAll</td>\n<td>테스트가 완전히 끝난 후 딱 한번만 실행</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<h3>6. JUnit5 Annotation</h3>\n<ul>\n<li>테스트를 구성하고, 프레임워크를 상속하기 위해서 Annotation을 지원</li>\n<li>\n<p><code>junit-jupiter-api</code> 모듈 안의 <code>org.junit.jupiter.api</code> 패키지 안에 존재</p>\n<table>\n<thead>\n<tr>\n<th>Annotation</th>\n<th>내용</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>@DisplayName</td>\n<td>테스트 클래스나 테스트 메서드에 이름을 붙여줄 때 사용</td>\n</tr>\n<tr>\n<td>@DisplayNameGeneration</td>\n<td>클래스에 해당 Annotation을 붙이면 @Test 메서드 이름에 언더바(_) 로 표시한 모든 부분은 공백으로 처리</td>\n</tr>\n<tr>\n<td>@Nested</td>\n<td>test 클래스 안에 Nested 테스트 클래스를 작성할 때 사용. static이 아닌 중첩 클래스, 즉 Inner 클래스여야만 한다. 테스트 인스턴스 라이플사이클이 per-class로 설정되어 있지 않다면 @BeforeAll, @AfterAll이 동작하지 않는다.(주의)</td>\n</tr>\n<tr>\n<td>@Tag</td>\n<td>테스트를 필터링 할 때 사용. 클래스 또는 메서드 레벨에 사용</td>\n</tr>\n<tr>\n<td>@Disabled</td>\n<td>테스트 클래스나, 메서드의 테스트를 비활성화. JUnit4의 @Ignore와 같다.</td>\n</tr>\n<tr>\n<td>@Timeout</td>\n<td>주어진 시간 안에 테스트가 끝나지 않으면 실패</td>\n</tr>\n<tr>\n<td>@ExtendWith</td>\n<td>extension을 등록. 이 Annotation은 상속이 된다. (확장 팩)</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<h3>7. 테스트 실행 조건</h3>\n<ul>\n<li>JUnit Juptier에 있는 ExecutionCondition API는 개발자가 특정 조건에 따라 테스트를 실행할지 말지 결정한다.</li>\n<li>여러 개의 ExecutionCondition이 등록되면 여러 개 조건 중 하나라도 비활성화 조건에 걸리면, 테스트를 비활성화한다.</li>\n<li>테스트가 왜 비활성화 되었는지 알려주고 싶다면, 모든 어노테이션은 disabledReason 속성을 이용하면 된다.</li>\n<li>\n<p>예시</p>\n<ol>\n<li>OS 종류에 따라 테스트 실행하기</li>\n<li>@EnabledOnOs, @DisabledOnOs 어너테이션 사용 </li>\n<li><code>ConditionalTest.java</code> 참조</li>\n<li>자바 환경변수에 따라 실행하기</li>\n<li>@EnabledOnJre, @DisabledOnJre, @EnabledForJreRange, @DisabledForJreRange </li>\n<li><code>JreConditionalTest.java</code> 참조</li>\n<li>시스템 속성 조건</li>\n<li>@EnabledIfSystemProperty, @DisabledIfSystemProperty </li>\n<li><code>SystemPropertyConditionalTest.java</code> 참조</li>\n<li>환경변수조건</li>\n<li>@EnabledIfEnvironmentVariable, @DisabledIfEnvironmentVariable </li>\n<li><code>EnvironmentVariableConditionalTest.java</code> 참조</li>\n<li>사용자 커스텀 조건</li>\n<li>@EnabledIf, @DisabledIf </li>\n<li><code>CustomConditionalTest.java</code> 참조</li>\n</ol>\n</li>\n</ul>\n<p><code>build.gradle</code>의 dependency에 <code>testImplementation(\"org.junit.jupiter:junit-jupiter-params:5.8.2\")</code> 추가</p>","id":"fe264f59-bd9f-53c6-97e3-5d09ab013a63"},"allPosts":{"edges":[{"node":{"id":"f5d1f1a7-7c2c-5f6a-9046-a6fe333a0e41"},"next":{"fields":{"slug":"/posts/kafka/"},"frontmatter":{"title":"Kafka"}},"previous":null},{"node":{"id":"827bacda-b789-58c1-b114-dd1a84d2cf0b"},"next":{"fields":{"slug":"/posts/tdd-sample-project/"},"frontmatter":{"title":"TDD SAMPLE PROJECT"}},"previous":{"fields":{"slug":"/posts/spring-integration-구조/"},"frontmatter":{"title":"Spring Integration 구조"}}},{"node":{"id":"fe264f59-bd9f-53c6-97e3-5d09ab013a63"},"next":{"fields":{"slug":"/posts/e-tas-server-to-server-연동-batch/"},"frontmatter":{"title":"eTAS Server to Server 연동 Batch"}},"previous":{"fields":{"slug":"/posts/kafka/"},"frontmatter":{"title":"Kafka"}}},{"node":{"id":"24b2dd59-8191-53ef-a9a4-d121eb896a0e"},"next":{"fields":{"slug":"/posts/spring-batch/"},"frontmatter":{"title":"Spring Batch"}},"previous":{"fields":{"slug":"/posts/tdd-sample-project/"},"frontmatter":{"title":"TDD SAMPLE PROJECT"}}},{"node":{"id":"7b317632-317d-580c-bfa6-c53f96edeb52"},"next":{"fields":{"slug":"/posts/react-project-개발기/"},"frontmatter":{"title":"React Project 개발기"}},"previous":{"fields":{"slug":"/posts/e-tas-server-to-server-연동-batch/"},"frontmatter":{"title":"eTAS Server to Server 연동 Batch"}}},{"node":{"id":"e29c2d7f-1fd2-5913-a904-11996c231f54"},"next":{"fields":{"slug":"/posts/hadoop/"},"frontmatter":{"title":"Hadoop"}},"previous":{"fields":{"slug":"/posts/spring-batch/"},"frontmatter":{"title":"Spring Batch"}}},{"node":{"id":"7f695fca-e5ce-5c55-970b-e8855f99b61a"},"next":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}},"previous":{"fields":{"slug":"/posts/react-project-개발기/"},"frontmatter":{"title":"React Project 개발기"}}},{"node":{"id":"9f46ad6e-455d-53e9-8d4c-4794e5af39dd"},"next":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}},"previous":{"fields":{"slug":"/posts/hadoop/"},"frontmatter":{"title":"Hadoop"}}},{"node":{"id":"7470f1ce-f71d-5772-a8be-806ed3f7cc66"},"next":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}},"previous":{"fields":{"slug":"/posts/java-script-1-개요/"},"frontmatter":{"title":"JavaScript (1) - 개요"}}},{"node":{"id":"27ea8f29-94a3-5302-a637-efd0af842208"},"next":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}},"previous":{"fields":{"slug":"/posts/java-script-3-제어흐름과-에러처리-loop-함수-표현식과-연산자-숫자와-날짜-텍스트-서식-정규-표현식/"},"frontmatter":{"title":"JavaScript (3) - 제어흐름과 에러처리, Loop, 함수, 표현식과 연산자, 숫자와 날짜, 텍스트 서식, 정규 표현식"}}},{"node":{"id":"c54308e0-d7a2-5d1c-b8ae-ecbfd04ed1ac"},"next":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}},"previous":{"fields":{"slug":"/posts/java-script-2-문법과-자료형/"},"frontmatter":{"title":"JavaScript (2) - 문법과 자료형"}}},{"node":{"id":"c8b65dec-7fef-5ef0-a515-27ae182dff3e"},"next":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}},"previous":{"fields":{"slug":"/posts/java-script-4-loop와-반복-함수-표현식과-연산자-숫자와-날자-텍스트-서식-정규표현식/"},"frontmatter":{"title":"JavaScript (4) - Loop와 반복, 함수, 표현식과 연산자, 숫자와 날자, 텍스트 서식, 정규표현식"}}},{"node":{"id":"6814abc2-41a1-520c-bd24-a8d2d02424fb"},"next":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}},"previous":{"fields":{"slug":"/posts/java-script-5-collections/"},"frontmatter":{"title":"JavaScript (5) - Collections"}}},{"node":{"id":"2fa87adf-6f94-54db-a8e4-7ab4990ba5e6"},"next":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}},"previous":{"fields":{"slug":"/posts/java-script-6-objects/"},"frontmatter":{"title":"JavaScript (6) - Objects"}}},{"node":{"id":"2311c1d2-b785-582e-a9a9-d80750b5d505"},"next":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}},"previous":{"fields":{"slug":"/posts/java-script-7-반복기-및-생성기-메타-프로그래밍/"},"frontmatter":{"title":"JavaScript (7) - 반복기 및 생성기, 메타 프로그래밍"}}},{"node":{"id":"54319bda-39af-5fa4-9eee-7f84ee580c1a"},"next":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}},"previous":{"fields":{"slug":"/posts/ci-cd/"},"frontmatter":{"title":"CI/CD"}}},{"node":{"id":"443ae298-350d-531c-a42c-34e0acb0cdd8"},"next":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}},"previous":{"fields":{"slug":"/posts/restful-api/"},"frontmatter":{"title":"Restful API"}}},{"node":{"id":"2e8c37a8-a44a-5356-b617-dc7b22034c2a"},"next":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}},"previous":{"fields":{"slug":"/posts/di와-자동-di/"},"frontmatter":{"title":"DI와 자동 DI"}}},{"node":{"id":"64980158-2ad8-5c44-91a8-a0185a6d4f6b"},"next":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}},"previous":{"fields":{"slug":"/posts/annotation/"},"frontmatter":{"title":"Annotation"}}},{"node":{"id":"5128821c-b701-5848-9979-bb91ec9c5836"},"next":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}},"previous":{"fields":{"slug":"/posts/spring-mvc-pattern/"},"frontmatter":{"title":"Spring MVC Pattern"}}},{"node":{"id":"d4549afd-0095-5810-b492-b843ca6e2f88"},"next":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-2/"},"frontmatter":{"title":"ORM과 JPA (2)"}}},{"node":{"id":"e46642ac-6d65-51b8-a535-21a9e3eabb56"},"next":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}},"previous":{"fields":{"slug":"/posts/orm과-jpa-1/"},"frontmatter":{"title":"ORM과 JPA (1)"}}},{"node":{"id":"46426481-29ee-5d00-aa6c-cf05d52490f6"},"next":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}},"previous":{"fields":{"slug":"/posts/apache-spark-2-rdd/"},"frontmatter":{"title":"Apache Spark (2) - RDD"}}},{"node":{"id":"6eed9dfa-e294-5b19-a225-cd43d6cb982a"},"next":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}},"previous":{"fields":{"slug":"/posts/apache-spark-1-개요/"},"frontmatter":{"title":"Apache Spark (1) - 개요"}}},{"node":{"id":"f77c8cbf-3a58-53fc-bd32-592702676a11"},"next":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}},"previous":{"fields":{"slug":"/posts/동시성-처리/"},"frontmatter":{"title":"동시성 처리"}}},{"node":{"id":"f016fc75-8476-5493-8ac1-e2862773f3e7"},"next":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}},"previous":{"fields":{"slug":"/posts/database/"},"frontmatter":{"title":"DATABASE"}}},{"node":{"id":"9f5a9a91-7af6-5ca3-b20f-d6e177e46c68"},"next":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}},"previous":{"fields":{"slug":"/posts/erd/"},"frontmatter":{"title":"ERD"}}},{"node":{"id":"b4e07799-70a4-523d-90ec-741e18230194"},"next":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}},"previous":{"fields":{"slug":"/posts/git-사용법/"},"frontmatter":{"title":"Git 사용법"}}},{"node":{"id":"571df319-d1dd-59b6-a588-7a5db12c6b3d"},"next":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}},"previous":{"fields":{"slug":"/posts/jpa-1-query/"},"frontmatter":{"title":"JPA (1) - Query"}}},{"node":{"id":"ef05bf06-2d53-5323-820b-98f46a906289"},"next":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}},"previous":{"fields":{"slug":"/posts/jpa-2-specification/"},"frontmatter":{"title":"JPA (2) - Specification"}}},{"node":{"id":"a78eb59a-78b3-5c86-bcc2-f09ea58fab23"},"next":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}},"previous":{"fields":{"slug":"/posts/j-query/"},"frontmatter":{"title":"jQuery"}}},{"node":{"id":"3c37f3d1-7097-5528-a31b-12bcdcd937ab"},"next":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}},"previous":{"fields":{"slug":"/posts/kubernetes/"},"frontmatter":{"title":"Kubernetes"}}},{"node":{"id":"fe690dd1-ec0c-544b-a44f-131d80987565"},"next":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}},"previous":{"fields":{"slug":"/posts/node-js/"},"frontmatter":{"title":"NodeJS"}}},{"node":{"id":"b8c8c26f-09bc-5759-8a7e-c81ffbc8f2c0"},"next":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}},"previous":{"fields":{"slug":"/posts/oop/"},"frontmatter":{"title":"OOP"}}},{"node":{"id":"6268f141-e6af-5f89-a55b-2174ef57651f"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/postgre-sql-2-psql/"},"frontmatter":{"title":"PostgreSQL (2) - PSQL"}}},{"node":{"id":"1a663d51-139e-500f-a209-04faaebd2e85"},"next":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}},"previous":{"fields":{"slug":"/posts/postgre-sql-1-개요/"},"frontmatter":{"title":"PostgreSQL (1) - 개요"}}},{"node":{"id":"b227a2c1-7853-5450-a1be-f3e1c83307b4"},"next":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"80979747-a7b7-5e5d-81bb-30729e2e16bd"},"next":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}},"previous":{"fields":{"slug":"/posts/react-hook/"},"frontmatter":{"title":"React Hook"}}},{"node":{"id":"a82c048c-1eea-54e3-912d-ae875640e04e"},"next":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}},"previous":{"fields":{"slug":"/posts/redux-react-redux/"},"frontmatter":{"title":"Redux & React-Redux"}}},{"node":{"id":"18c2a54b-1a71-511c-824c-f437be00f3ef"},"next":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}},"previous":{"fields":{"slug":"/posts/react/"},"frontmatter":{"title":"React"}}},{"node":{"id":"d2056881-058f-5f23-88ec-cf613dff77f0"},"next":{"fields":{"slug":"/posts/web-rtc/"},"frontmatter":{"title":"WebRTC"}},"previous":{"fields":{"slug":"/posts/swagger/"},"frontmatter":{"title":"Swagger"}}},{"node":{"id":"d54a4c19-013d-538a-893d-ff8f62d34d7a"},"next":null,"previous":{"fields":{"slug":"/posts/tomcat-사용법/"},"frontmatter":{"title":"Tomcat 사용법"}}}]}},"pageContext":{"id":"fe264f59-bd9f-53c6-97e3-5d09ab013a63"}},"staticQueryHashes":["2001315320"]}